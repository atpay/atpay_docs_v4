---
title: "@Pay | Developer Docs"
---

%h1.title @Pay 101

%p.desc @Pay offers a suite of tools that developers can use to integrate our 2-click payment platform with any application. With the implementation of our v4 APIs, your organization can create offers, send invoices, register payment methods, receive transaction information & more!

%hr


%h2.title Things to Know
%p Throughout the documentation there are references that are specific to the @Pay platform. Here are some brief descriptions:


%p
  %strong
    @Pay 2-Click Enabled -
  A customer is 2-Click Enabled if they have registered their card with your organization to make payments. Any transaction request that is made with an @Pay Button or @Pay Mailto by a 2-Click Enabled customer will automatically process with your Gateway.

%p
  %strong
    @Pay 2-Click Button -
  A mobile and platform optimized HTML button that is placed into an email campaign or mobile webpage. These link out to an @Pay Mailto or directly to a payment capture page. @Pay 2-Click Buttons are generally created and available when an offer is generated.

%p
  %strong
    @Pay Hooks -
  We offer four types of hooks: 'Pre-Sale', 'Transaction', 'Error' & 'Further Action Required'. Depending on the hook type, these will send information to your application when specific events occur during a transaction.

%p
  %strong
    @Pay Invoice -
  A special type of offer that is generated by the calculation of an itemized list.

%p
  %strong
    @Pay Mailto -
  A mail-to link that contains specific tokenized details that are used to process a transaction when sent to the @Pay platform.

%p
  %strong
    @Pay Offer -
  An offer can be generated manually from the Organization Dashboard or dynamically using one of our SDK's. Transactions are processed against offers. An offer can be tied to an @Pay 2-Click Button, a Payment Capture Page, an @Pay Invoice or even a QR code. When an offer is created, an @Pay Mailto is generated. When configuring an Offer you can set the price, expiration date, offer details, and a variety of additional options. A list of created Offers can be seen from within your Organization Dashboard.

%p
  %strong
    @Pay Token -
  A tokenized representation of a customer's payment method. These can be safely stored and used to process transactions with the JavaScript SDK and generate offers tied to that specific @Pay Token.

%p
  %strong
    Authorized Domain -
  This is set in the Organization Dashboard in API settings. The Authorized Domain is one of the mechanisms used to verify and authorize the use of our JavaScript SDK. This is set to the URL of the application that is being integrated.

%p
  %strong
    Gateway -
  @Pay connects with a variety of different Gateways or payment processors. Every organization is provided with a "Test" gateway for development purposes. Gateways are added in the Organization Dashboard. An offer can be tied to a specific gateway when being created. If a specific gateway is not selected, the default gateway will be used. A list of compatibly gateways can be viewed #{link_to "here", "http://www.atpay.com/features/compatibility/"}.

%p
  %strong
    Payment Capture Page -
  A webpage that captures a customer's payment details. A customer will only need fill out a Payment Capture Page once, and then they are 2-Click Enabled. When a new customer attempts an offer, they will receive a FAR (Further Action Required) email with a link to the Payment Capture Page. @Pay will dynamically create a Payment Capture Page for each of your offers, or you can configure and use your own payment form (that utilizes our JavaScript SDK).

%p
  %strong
    FAR (Further Action Required) -
  If a customer submits a transaction and @Pay needs further details, the transaction will be marked as FAR. By default @Pay will send an email specifying what is required. A customer will receive a FAR message if they are attempting to make a payment with your organization for the first time. On rare occasions, a FAR will also be generated to authenticate the transaction if certain security checks aren't met.

